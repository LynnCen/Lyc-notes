import{_ as a,c as o,o as t,a8 as i}from"./chunks/framework.BR0kJavg.js";const u=JSON.parse('{"title":"埋点","description":"","frontmatter":{},"headers":[],"relativePath":"webpack/埋点.md","filePath":"webpack/埋点.md","lastUpdated":1716262213000}'),r={name:"webpack/埋点.md"};function l(n,e,d,c,s,h){return t(),o("div",null,[...e[0]||(e[0]=[i('<h1 id="埋点" tabindex="-1">埋点 <a class="header-anchor" href="#埋点" aria-label="Permalink to &quot;埋点&quot;">​</a></h1><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>在线上项目中，我们需要统计下用户在使用该产品的行为与使用情况，通过这些统计数据进行处理与分析，从用户的角度去了解该产品的使用与体验，从而更好的进行产品的迭代与升级，更加符合用户的体验，更加贴近用户使用习惯。 因此，我们在业务中需要添加一些用户行为统计的需求，如：</p><ul><li>收集用户在页面的浏览量或点击量</li><li>访问某个站点不同 IP 的人数</li><li>用户在页面中停留的时间</li><li>用户在页面中触发的行为</li><li>用户滚屏行为</li></ul><h2 id="名称解释" tabindex="-1">名称解释 <a class="header-anchor" href="#名称解释" aria-label="Permalink to &quot;名称解释&quot;">​</a></h2><h3 id="uv-unique-visitor" tabindex="-1">UV（Unique visitor） <a class="header-anchor" href="#uv-unique-visitor" aria-label="Permalink to &quot;UV（Unique visitor）&quot;">​</a></h3><p>是指通过互联网访问、浏览这个网页的自然人。访问您网站的一台电脑客户端为一个访客。<code>00:00-24:00</code>内相同的客户端只被计算一次。一天内同个访客多次访问仅计算一个<code>UV</code>。</p><h3 id="ip-internet-protocol" tabindex="-1">IP（Internet Protocol） <a class="header-anchor" href="#ip-internet-protocol" aria-label="Permalink to &quot;IP（Internet Protocol）&quot;">​</a></h3><p>独立IP是指访问过某站点的IP总数，以用户的IP地址作为统计依据。<code>00:00-24:00</code>内相同<code>IP</code>地址之被计算一次。</p><p>UV与IP区别</p><ul><li>如：你和你的家人用各自的账号在同一台电脑上登录新浪微博，则<code>IP</code>数+1，<code>UV</code>数+2。由于使用的是同一台电脑，所以<code>IP</code>不变，但使用的不同账号，所以<code>UV</code>+2</li></ul><h3 id="pv-page-view" tabindex="-1">PV（Page View） <a class="header-anchor" href="#pv-page-view" aria-label="Permalink to &quot;PV（Page View）&quot;">​</a></h3><p>即页面浏览量或点击量，用户每1次对网站中的每个<strong>网页</strong>访问均被记录1个<code>PV</code>。用户对同一页面的多次访问，访问量累计，用以衡量网站用户访问的网页数量。</p><h2 id="vv-visit-view" tabindex="-1">VV（Visit View） <a class="header-anchor" href="#vv-visit-view" aria-label="Permalink to &quot;VV（Visit View）&quot;">​</a></h2><p>用以统计所有访客1天内访问<strong>网站</strong>的次数。当访客完成所有浏览并最终关掉该网站的所有页面时便完成了一次访问，同一访客1天内可能有多次访问行为，访问次数累计。</p><p>PV与VV区别</p><ul><li>如：你今天10点钟打开了百度，访问了它的三个页面；11点钟又打开了百度，访问了它的两个页面，则<code>PV</code>数+5，<code>VV</code>数+2.PV是指<strong>页面</strong>的浏览次数，VV是指你访问<strong>网站</strong>的次数。</li></ul><p>前端数据采集也就是前端埋点和上报，前端埋点方法有三种：代码埋点，可视化埋点和无痕埋点。 埋点的技术实质，是先监听软件应用运行过程中的事件，当需要关注的事件发生时进行判断和捕获。</p><h2 id="代码埋点" tabindex="-1">代码埋点 <a class="header-anchor" href="#代码埋点" aria-label="Permalink to &quot;代码埋点&quot;">​</a></h2><p>代码埋点就是以嵌入代码的形式进行埋点，例如用户通过点击事件触发某个接口调用，我们就可以在点击调用的接口中，插入一段代码或者传入某些参数，将数据直接传递给服务端。</p><h2 id="可视化埋点" tabindex="-1">可视化埋点 <a class="header-anchor" href="#可视化埋点" aria-label="Permalink to &quot;可视化埋点&quot;">​</a></h2><p>通过可视化工具配置采集节点，在前端自动解析配置并上报埋点数据，从而实现所谓的“无痕埋点”。</p><p>优点：埋点只需业务同学接入监控，无需在开发中插入代码。</p><p>缺点：可配置组件有限，不能手动定制，只有可视化工具提供。</p><h2 id="无痕埋点" tabindex="-1">无痕埋点 <a class="header-anchor" href="#无痕埋点" aria-label="Permalink to &quot;无痕埋点&quot;">​</a></h2><p>无埋点不是说不需要埋点，而是所有的前端事件都被绑定一个标识，通过这个标识把所有有关的事件都记录下来，不需要开发人员添加额外代码。 通过定义上传记录文件，配合解析文件，将数据变成我们想要的数据，并由数据分析人员进行分析实现无埋点统计，代表方案是国内的 GrowingIO。</p><p>优点：无需开发，业务人员埋点即可；先上报，后埋点。</p><p>缺点：sdk 开发人员需提供一套无痕埋点技术成品，包括能正确获取 PV，UV，Action，Time 等多项统计指标。前期技术投入大。</p><p>无埋点和可视化埋点均不需要开发支持，仅数据业务同学进行设置即可。但两者数据上报-埋点设置存在较大的差异：无埋点支持在数据上报之后再进行埋点设置，因而数据采集与上报的量远远大于可视化埋点。</p><h2 id="spm埋点" tabindex="-1">SPM埋点 <a class="header-anchor" href="#spm埋点" aria-label="Permalink to &quot;SPM埋点&quot;">​</a></h2><p>文档： <a href="https://ice3.alibaba-inc.com/v3/docs/guide/advanced/inside/spm" target="_blank" rel="noreferrer">https://ice3.alibaba-inc.com/v3/docs/guide/advanced/inside/spm</a></p><p>阿里日志采用了一个<strong>页面定位模型(SPM)</strong>, 来记录和描述用户的具体点击位置信息。简单而言, 当用户点击页面上的一个链接时, 日志系统就会为该位置赋予一个唯一的编码(SPM位置编码), 这个SPM将被写入到目标页面的URL内. 如此一来, 通过观察目标页面PV日志中的url, 即可推算出本次PV到底来自哪个前续页面的哪个位置.</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://github.com/JerryWen1994/Blog/blob/master/Technology/%E5%89%8D%E7%AB%AF%E7%9B%91%E6%8E%A7%E4%B8%8E%E5%9F%8B%E7%82%B9.md" target="_blank" rel="noreferrer">https://github.com/JerryWen1994/Blog/blob/master/Technology/前端监控与埋点.md</a></li></ul>',34)])])}const P=a(r,[["render",l]]);export{u as __pageData,P as default};
