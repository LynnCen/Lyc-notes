import{_ as e,C as p,c as k,o as i,a8 as a,b as h,w as n,a as t,G as r,a9 as d}from"./chunks/framework.BR0kJavg.js";const C=JSON.parse('{"title":"模版方法设计模式（Template Method Pattern）","description":"","frontmatter":{},"headers":[],"relativePath":"designPatterns/模版方法.md","filePath":"designPatterns/模版方法.md","lastUpdated":1749743569000}'),E={name:"designPatterns/模版方法.md"};function o(c,s,g,y,b,F){const l=p("Mermaid");return i(),k("div",null,[s[1]||(s[1]=a(`<h1 id="模版方法设计模式-template-method-pattern" tabindex="-1">模版方法设计模式（Template Method Pattern） <a class="header-anchor" href="#模版方法设计模式-template-method-pattern" aria-label="Permalink to &quot;模版方法设计模式（Template Method Pattern）&quot;">​</a></h1><p>模板方法模式在一个方法中定义一个算法的骨架，而将一些步骤延迟到子类中实现。这使得子类可以在不改变算法结构的情况下，重新定义算法中的某些特定步骤。</p><p>简单来说，想象一下你有一份制作饮品的说明书（比如咖啡或茶）。这份说明书规定了大致的步骤：烧水、冲泡、倒入杯中、加调料。其中，“烧水”和“倒入杯中”对于所有饮品都是一样的，但“冲泡”（用咖啡粉还是茶叶）和“加调料”（加糖奶还是柠檬）则会因具体饮品而异。模板方法模式就是把这份“说明书”抽象出来，通用步骤直接实现，变化步骤则留给具体的“饮品制作类”去实现。</p><h2 id="核心概念" tabindex="-1">核心概念 <a class="header-anchor" href="#核心概念" aria-label="Permalink to &quot;核心概念&quot;">​</a></h2><p>理解模板方法模式，需要掌握以下几个角色：</p><ol><li><strong>抽象类 (AbstractClass)</strong>：</li></ol><ul><li>包含一个<strong>模板方法 (Template Method)</strong>，该方法定义了算法的骨架。这个方法通常是 <code>public</code> 或 <code>protected</code> 且 final (在 TypeScript 中可以通过访问修饰符和约定来模拟 final 的效果，即不希望子类重写模板方法本身)。</li><li>包含一个或多个<strong>抽象方法 (Abstract Operations)</strong>，这些方法由子类来实现算法中的特定步骤。</li><li>可以包含<strong>具体方法 (Concrete Operations)</strong>，这些方法实现了算法中固定不变的部分，所有子类共享。</li><li>可以包含<strong>钩子方法 (Hook Operations)</strong>，这些方法提供了默认实现，子类可以选择性地覆盖它们，以控制算法的某些可选部分或流程。</li></ul><ol start="2"><li><strong>具体类 (ConcreteClass)</strong>：</li></ol><ul><li>实现抽象类中的抽象方法，实现具体的算法步骤。</li><li>可以包含<strong>具体方法 (Concrete Operations)</strong>，这些方法实现了算法中固定不变的部分，所有子类共享。</li><li>可以包含<strong>钩子方法 (Hook Operations)</strong>，这些方法提供了默认实现，子类可以选择性地覆盖它们，以控制算法的某些可选部分或流程。</li></ul><p>优点：</p><ul><li>代码复用：将算法中公共的部分提取到父类中，避免了代码重复。</li><li>框架扩展：子类可以通过实现特定步骤来扩展算法的功能，而无需修改算法的整体结构。</li><li>控制反转：父类调用子类的操作，而不是子类调用父类，符合好莱坞原则 (&quot;Don&#39;t call us, we&#39;ll call you&quot;)。父类定义了流程，子类负责实现细节。</li><li>封装不变部分，扩展可变部分：算法的结构是固定的（不变），但某些步骤是可变的。</li></ul><h2 id="案例-制作饮品" tabindex="-1">案例（制作饮品） <a class="header-anchor" href="#案例-制作饮品" aria-label="Permalink to &quot;案例（制作饮品）&quot;">​</a></h2><p>让我们通过一个制作饮品的例子来理解模板方法模式。无论是制作咖啡还是茶，基本步骤是相似的，但具体冲泡内容和调料不同。</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 抽象类：BeverageMaker</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BeverageMaker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 模板方法：定义了制作饮品的完整流程</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 我们不希望子类覆盖这个骨架流程，所以通常它不是抽象的</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> finalMakeBeverage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">boilWater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pourInCup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">customerWantsCondiments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addCondiments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hookAfterPour</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 另一个钩子方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 具体方法：所有饮品制作都需要烧水</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> boilWater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;将水烧开&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 抽象方法：冲泡过程，由子类实现</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> abstract</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> brew</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 具体方法：所有饮品制作都需要倒入杯中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pourInCup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;将饮品倒入杯中&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 抽象方法：添加调料，由子类实现</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> abstract</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addCondiments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 钩子方法：顾客是否需要调料？子类可以覆盖此方法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> customerWantsCondiments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 默认需要调料</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 钩子方法：倒入杯子后的额外操作，子类可以覆盖</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hookAfterPour</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 默认无操作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 具体类：CoffeeMaker</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CoffeeMaker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BeverageMaker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> brew</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;用沸水冲泡咖啡粉&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addCondiments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;加入糖和牛奶&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 覆盖钩子方法，假设这种咖啡默认不加额外的步骤</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hookAfterPour</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;咖啡制作完成，搅拌均匀。&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 具体类：TeaMaker</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TeaMaker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BeverageMaker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> brew</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;用沸水浸泡茶叶&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addCondiments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;加入柠檬片&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 覆盖钩子方法，茶不需要调料</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> customerWantsCondiments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;顾客说茶不需要额外调料。&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 客户端代码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--- 制作咖啡 ---&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> coffee</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CoffeeMaker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">coffee.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">finalMakeBeverage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--- 制作茶 ---&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tea</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TeaMaker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tea.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">finalMakeBeverage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br></div></div><p><strong>代码解释：</strong></p><ol><li><code>BeverageMaker</code> 是抽象类，它定义了制作饮品的模板方法 <code>finalMakeBeverage()</code>。这个方法按照固定的顺序调用了其他基本操作。</li></ol><ul><li><code>boilWater()</code> 和 <code>pourInCup()</code> 是具体方法，因为它们对于所有饮品都是一样的。</li><li><code>brew()</code> 和 <code>addCondiments()</code> 是抽象方法，因为它们的具体实现会因饮品类型（咖啡、茶）而异，必须由子类提供。</li><li><code>customerWantsCondiments()</code> 是一个钩子方法。它提供了一个默认行为（返回 true），但子类可以覆盖它来改变算法的某个特定步骤（比如茶默认不加调料）。</li><li><code>hookAfterPour()</code> 也是一个钩子方法，允许子类在倒入杯中后执行一些可选操作。</li></ul><ol start="2"><li><code>CoffeeMaker</code> 和 <code>TeaMaker</code> 是具体类。</li></ol><ul><li>它们都继承自 <code>BeverageMaker。</code></li><li>它们各自实现了 <code>brew()</code> 和 <code>addCondiments()</code> 方法，以定义自己独特的冲泡方式和调料。</li><li><code>TeaMaker</code> 还覆盖了 <code>customerWantsCondiments()</code> 钩子方法，返回 false，表示茶通常不加调料（或者说，这个顾客不想要）。</li><li><code>CoffeeMaker</code> 覆盖了 <code>hookAfterPour()</code> 来添加一个咖啡特有的后续步骤。</li><li>当我们调用 <code>coffee.finalMakeBeverage()</code> 或 <code>tea.finalMakeBeverage()</code> 时，实际上是在执行 <code>BeverageMaker</code> 中定义的那个固定流程，但其中某些步骤会调用到具体子类 (<code>CoffeeMaker</code> 或 <code>TeaMaker</code>) 中实现的方法。</li></ul><h2 id="uml-类图" tabindex="-1">UML 类图 <a class="header-anchor" href="#uml-类图" aria-label="Permalink to &quot;UML 类图&quot;">​</a></h2>`,20)),(i(),h(d,null,{default:n(()=>[r(l,{id:"mermaid-169",class:"mermaid",graph:"classDiagram%0A%20%20%20%20direction%20BT%0A%20%20%20%20class%20BeverageMaker%20%7B%0A%20%20%20%20%20%20%20%20%2BfinalMakeBeverage()%20void%0A%20%20%20%20%20%20%20%20%23boilWater()%20void%0A%20%20%20%20%20%20%20%20%23abstract%20brew()%20void%0A%20%20%20%20%20%20%20%20%23pourInCup()%20void%0A%20%20%20%20%20%20%20%20%23abstract%20addCondiments()%20void%0A%20%20%20%20%20%20%20%20%23customerWantsCondiments()%20bool%0A%20%20%20%20%20%20%20%20%23hookAfterPour()%20void%0A%20%20%20%20%7D%0A%0A%20%20%20%20class%20CoffeeMaker%20%7B%0A%20%20%20%20%20%20%20%20%23brew()%20void%0A%20%20%20%20%20%20%20%20%23addCondiments()%20void%0A%20%20%20%20%20%20%20%20%23hookAfterPour()%20void%0A%20%20%20%20%7D%0A%0A%20%20%20%20class%20TeaMaker%20%7B%0A%20%20%20%20%20%20%20%20%23brew()%20void%0A%20%20%20%20%20%20%20%20%23addCondiments()%20void%0A%20%20%20%20%20%20%20%20%23customerWantsCondiments()%20bool%0A%20%20%20%20%7D%0A%0A%20%20%20%20BeverageMaker%20%3C%7C--%20CoffeeMaker%0A%20%20%20%20BeverageMaker%20%3C%7C--%20TeaMaker%0A%0A%20%20%20%20note%20for%20BeverageMaker%20%22%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%3A%20finalMakeBeverage()%5Cn%E5%85%B7%E4%BD%93%E6%96%B9%E6%B3%95%3A%20boilWater()%2C%20pourInCup()%5Cn%E6%8A%BD%E8%B1%A1%E6%96%B9%E6%B3%95%3A%20brew()%2C%20addCondiments()%5Cn%E9%92%A9%E5%AD%90%E6%96%B9%E6%B3%95%3A%20customerWantsCondiments()%2C%20hookAfterPour()%22%0A"})]),fallback:n(()=>[...s[0]||(s[0]=[t(" Loading... ",-1)])]),_:1})),s[2]||(s[2]=a('<p><strong>图例说明:</strong></p><ul><li><code>BeverageMaker</code> 是抽象类 (通常用斜体表示，Mermaid 中可以通过 note 补充说明)。</li><li><code>CoffeeMaker</code> 和 <code>TeaMaker</code> 是具体类。</li><li>箭头 &lt;|-- 表示继承关系 (<code>CoffeeMaker</code> 和 <code>TeaMaker</code> 继承自 <code>BeverageMaker</code>)。</li><li><code>+</code> 表示 <code>public</code> 方法。</li><li><code>#</code> 表示 <code>protected</code> 方法。</li><li><code>abstract</code> 关键字标记了抽象方法。</li></ul><h2 id="何时使用" tabindex="-1">何时使用 <a class="header-anchor" href="#何时使用" aria-label="Permalink to &quot;何时使用&quot;">​</a></h2><ul><li>当多个类有相似的算法，但具体步骤实现不同时。可以将算法的骨架提取到父类，具体步骤由子类实现。</li><li>当你想控制子类扩展的范围时。模板方法定义了算法的框架，子类只能在特定的扩展点（抽象方法、钩子方法）进行修改。</li><li>当需要复用大量代码，同时又允许特定行为的定制化。</li></ul><h2 id="总结-📝" tabindex="-1">总结 📝 <a class="header-anchor" href="#总结-📝" aria-label="Permalink to &quot;总结 📝&quot;">​</a></h2><p>模板方法模式是一种简单而强大的行为设计模式。它通过在抽象父类中定义算法的框架，并将一些可变步骤的实现延迟到子类，从而在保持算法结构不变的前提下，允许子类重新定义算法的某些特定步骤。这有助于代码复用和框架的搭建。对于前端开发来说，理解并运用它可以帮助我们构建更灵活、更易于维护的组件和逻辑模块。</p>',6))])}const m=e(E,[["render",o]]);export{C as __pageData,m as default};
