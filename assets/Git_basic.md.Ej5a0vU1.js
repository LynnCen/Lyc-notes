import{_ as e,c as i,o as t,a8 as l}from"./chunks/framework.B1xsROTH.js";const g=JSON.parse('{"title":"Git 基础篇","description":"","frontmatter":{},"headers":[],"relativePath":"Git/basic.md","filePath":"Git/basic.md","lastUpdated":1744985233000}'),o={name:"Git/basic.md"};function d(r,a,c,s,n,h){return t(),i("div",null,a[0]||(a[0]=[l('<h1 id="git-基础篇" tabindex="-1">Git 基础篇 <a class="header-anchor" href="#git-基础篇" aria-label="Permalink to &quot;Git 基础篇&quot;">​</a></h1><h2 id="一、git-是什么" tabindex="-1">一、Git 是什么？ <a class="header-anchor" href="#一、git-是什么" aria-label="Permalink to &quot;一、Git 是什么？&quot;">​</a></h2><p>Git 是一个分布式版本控制系统，用于跟踪文件的更改，协调多个开发者之间的工作。它允许开发者从中央仓库克隆代码，进行修改，并提交回中央仓库。</p><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><h3 id="初始化仓库" tabindex="-1">初始化仓库 <a class="header-anchor" href="#初始化仓库" aria-label="Permalink to &quot;初始化仓库&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="撤销提交" tabindex="-1">撤销提交 <a class="header-anchor" href="#撤销提交" aria-label="Permalink to &quot;撤销提交&quot;">​</a></h3><p><code>git reset --soft HEAD^</code></p><h3 id="身份信息" tabindex="-1">身份信息 <a class="header-anchor" href="#身份信息" aria-label="Permalink to &quot;身份信息&quot;">​</a></h3><p>github 贡献值不显示问题：</p><p>提交必须使用与github账号关联的电子邮箱地址</p><ul><li><code> git config user.email</code></li><li><code> git config --global user.email 邮箱地址</code> # 对所有仓库设置电子邮箱地址</li><li><code> git config --local user.email 邮箱地址</code> # 仅对当前仓库设置电子邮箱地址</li></ul><h3 id="分支" tabindex="-1">分支 <a class="header-anchor" href="#分支" aria-label="Permalink to &quot;分支&quot;">​</a></h3><ul><li><code>git branch 分支名</code> 创建分支</li><li><code>git checkout 分支名</code> 切换分支</li><li><code>git merge 分支名</code> 合并分支</li><li><code>git branch -d 分支名</code> 删除分支</li><li><code>git branch -D 分支名</code> 强制删除分支</li></ul><h3 id="合并" tabindex="-1">合并 <a class="header-anchor" href="#合并" aria-label="Permalink to &quot;合并&quot;">​</a></h3><ul><li><code>git merge 分支名</code> 合并分支</li><li><code>git merge --no-ff 分支名</code> 合并分支并生成合并提交</li><li><code>git merge --squash 分支名</code> 合并分支并生成合并提交</li></ul><h3 id="标签" tabindex="-1">标签 <a class="header-anchor" href="#标签" aria-label="Permalink to &quot;标签&quot;">​</a></h3><ul><li><code>git tag 标签名</code> 创建标签</li><li><code>git tag -a 标签名 -m &quot;描述&quot;</code> 创建标签</li><li><code>git tag -d 标签名</code> 删除标签</li></ul>',18)]))}const b=e(o,[["render",d]]);export{g as __pageData,b as default};
