import{_ as a,c as i,o as e,a8 as l}from"./chunks/framework.DfyYcdQv.js";const c=JSON.parse('{"title":"BrowserTools MCP 使用指南","description":"","frontmatter":{},"headers":[],"relativePath":"AI/mcp/browserTools.md","filePath":"AI/mcp/browserTools.md","lastUpdated":1749740967000}'),o={name:"AI/mcp/browserTools.md"};function r(t,s,n,h,p,d){return e(),i("div",null,s[0]||(s[0]=[l(`<h1 id="browsertools-mcp-使用指南" tabindex="-1">BrowserTools MCP 使用指南 <a class="header-anchor" href="#browsertools-mcp-使用指南" aria-label="Permalink to &quot;BrowserTools MCP 使用指南&quot;">​</a></h1><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>本文章介绍如何安装和使用 <a href="https://browsertools.agentdesk.ai/installation" target="_blank" rel="noreferrer">BrowserTools MCP</a>，这是一个强大的 MCP 工具，可以让 AI 代码编辑器直接与浏览器交互。</p></div><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>BrowserTools MCP 是由 <a href="https://x.com/tedx_ai" target="_blank" rel="noreferrer">@tedx_ai</a> 开发的一个创新工具，它将 AI 代码编辑器和智能体直接嵌入到 Web 浏览器中，提供高效的调试功能和无缝的开发体验。通过这个工具，你可以简单地告诉 Cursor 或任何支持 MCP 集成的 AI 代码编辑器：&quot;这个功能不工作...进入调试模式！&quot;或&quot;检查控制台和网络日志，看看哪里出错了？&quot;</p><h2 id="主要特性" tabindex="-1">主要特性 <a class="header-anchor" href="#主要特性" aria-label="Permalink to &quot;主要特性&quot;">​</a></h2><p>BrowserTools MCP 为 AI 代码编辑器和智能体提供了以下强大功能：</p><h3 id="🔍-日志监控" tabindex="-1">🔍 日志监控 <a class="header-anchor" href="#🔍-日志监控" aria-label="Permalink to &quot;🔍 日志监控&quot;">​</a></h3><ul><li><strong>控制台日志和错误监控</strong>：实时捕获浏览器控制台的所有日志和错误信息</li><li><strong>XHR 网络请求/响应监控</strong>：监控所有网络请求和响应，便于调试 API 调用问题</li></ul><h3 id="📸-视觉调试" tabindex="-1">📸 视觉调试 <a class="header-anchor" href="#📸-视觉调试" aria-label="Permalink to &quot;📸 视觉调试&quot;">​</a></h3><ul><li><strong>截图功能</strong>：支持自动截图并可选择性地自动粘贴到 Cursor 中</li><li><strong>当前选中 DOM 元素获取</strong>：获取当前在浏览器中选中的 DOM 元素信息</li></ul><h3 id="🚀-性能和质量扫描" tabindex="-1">🚀 性能和质量扫描 <a class="header-anchor" href="#🚀-性能和质量扫描" aria-label="Permalink to &quot;🚀 性能和质量扫描&quot;">​</a></h3><ul><li><strong>SEO 扫描</strong>：通过 Lighthouse 运行 SEO 优化扫描</li><li><strong>性能扫描</strong>：评估网页性能指标</li><li><strong>代码质量扫描</strong>：检测代码质量问题</li><li><strong>NextJS 专用 SEO 审计</strong>：针对 NextJS 应用的专门 SEO 审计</li></ul><h3 id="🛠️-智能模式" tabindex="-1">🛠️ 智能模式 <a class="header-anchor" href="#🛠️-智能模式" aria-label="Permalink to &quot;🛠️ 智能模式&quot;">​</a></h3><ul><li><strong>调试模式</strong>：使用多种工具和提示来自动修复 bug</li><li><strong>审计模式</strong>：执行全面的 Web 应用审计，涵盖 SEO、性能和可访问性</li></ul><h2 id="系统要求" tabindex="-1">系统要求 <a class="header-anchor" href="#系统要求" aria-label="Permalink to &quot;系统要求&quot;">​</a></h2><ul><li><strong>Node.js</strong>：需要在机器上安装 Node.js</li><li><strong>Google Chrome 或基于 Chromium 的浏览器</strong></li><li><strong>MCP 客户端应用</strong>：支持 Cursor、Windsurf、RooCode、Cline、Continue、Zed、Claude Desktop</li></ul><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>模型上下文协议（MCP）特定于 Anthropic 模型。使用 Cursor 等编辑器时，请确保启用 composer agent 并选择 Claude 3.5 Sonnet 作为模型。</p></div><h2 id="安装指南" tabindex="-1">安装指南 <a class="header-anchor" href="#安装指南" aria-label="Permalink to &quot;安装指南&quot;">​</a></h2><h3 id="第一步-下载-chrome-扩展插件" tabindex="-1">第一步：下载 Chrome 扩展插件 <a class="header-anchor" href="#第一步-下载-chrome-扩展插件" aria-label="Permalink to &quot;第一步：下载 Chrome 扩展插件&quot;">​</a></h3><p>由于 Google 扩展市场对该插件还处于审核中，需要手动下载安装：</p><ul><li><p><strong>直接下载</strong>：<a href="https://github.com/AgentDeskAI/browser-tools-mcp/releases/download/v1.2.0/BrowserTools-1.2.0-extension.zip" target="_blank" rel="noreferrer">点击下载扩展</a></p></li><li><p><strong>从 GitHub 下载</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/AgentDeskAI/browser-tools-mcp.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul><h3 id="第二步-安装-chrome-扩展" tabindex="-1">第二步：安装 Chrome 扩展 <a class="header-anchor" href="#第二步-安装-chrome-扩展" aria-label="Permalink to &quot;第二步：安装 Chrome 扩展&quot;">​</a></h3><ol><li><p><strong>打开扩展管理页面</strong>：</p><ul><li>点击 Chrome 浏览器右上角的三个点</li><li>选择&quot;更多工具&quot; → &quot;扩展程序&quot;</li><li>或直接访问 <code>chrome://extensions/</code></li></ul></li><li><p><strong>启用开发者模式</strong>：</p><ul><li>在扩展程序页面右上角打开&quot;开发者模式&quot;开关</li></ul></li><li><p><strong>安装扩展</strong>：</p><ul><li>点击&quot;加载已解压的扩展程序&quot;</li><li>选择下载并解压的插件文件夹</li><li>安装成功后，在 Chrome 浏览器右上角可以看到 BrowserToolsMCP 图标</li></ul></li></ol><h3 id="第三步-在-cursor-中配置-browsertools-mcp" tabindex="-1">第三步：在 Cursor 中配置 BrowserTools MCP <a class="header-anchor" href="#第三步-在-cursor-中配置-browsertools-mcp" aria-label="Permalink to &quot;第三步：在 Cursor 中配置 BrowserTools MCP&quot;">​</a></h3><ol><li><p><strong>打开 Cursor 设置</strong>：</p><ul><li>进入 Cursor Settings</li><li>转到 Features，滚动到 MCP Servers</li></ul></li><li><p><strong>添加新的 MCP 服务器</strong>：</p><ul><li>点击&quot;Add new MCP server&quot;</li><li>给它一个唯一名称（如：browser-tools）</li><li>设置类型为&quot;command&quot;</li><li>设置命令为</li></ul></li></ol><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;mcpServers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;browserTools&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;npx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@agentdeskai/browser-tools-mcp@latest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;BROWSER_TOOLS_MCP_PORT&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3025&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;BROWSER_TOOLS_MCP_HOST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;localhost&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="3"><li><p><strong>确认连接</strong>：</p><ul><li>等待几秒钟或点击刷新按钮</li><li>确认 MCP 服务器已连接，应该看到所有工具列表和工具名称旁边的绿色圆圈</li></ul></li></ol><h3 id="第四步-运行-browsertools-服务器" tabindex="-1">第四步：运行 BrowserTools 服务器 <a class="header-anchor" href="#第四步-运行-browsertools-服务器" aria-label="Permalink to &quot;第四步：运行 BrowserTools 服务器&quot;">​</a></h3><p>在终端中运行以下命令启动服务器（聚合来自 Chrome 扩展的日志并设置截图捕获的 WebSocket）： (注意顺序，先运行browser-tools-server，再运行browser-tools-mcp)：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @agentdeskai/browser-tools-server</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @agentdeskai/browser-tools-mcp</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>browser-tools-server 运行在端口 3025 上。请确保终止在此端口上运行的任何进程。</p></div><h3 id="第五步-打开-chrome-开发者控制台" tabindex="-1">第五步：打开 Chrome 开发者控制台 <a class="header-anchor" href="#第五步-打开-chrome-开发者控制台" aria-label="Permalink to &quot;第五步：打开 Chrome 开发者控制台&quot;">​</a></h3><ol><li><p><strong>打开开发者工具</strong>：</p><ul><li>在任何网页上右键点击</li><li>选择&quot;检查&quot;打开 Chrome 开发工具</li></ul></li><li><p><strong>访问 BrowserTools 面板</strong>： 在开发者工具中，你可以导航到 BrowserTools 面板进行：</p><ul><li>手动截图</li><li>定义截图保存路径（默认：<code>Downloads/mcp-screenshots</code>）</li><li>清除所有保存的日志</li><li>修改日志大小限制/截断设置</li></ul></li></ol><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>每次刷新页面时，日志都会从服务器中清除。你可以通过点击 BrowserTools 面板中的&quot;Wipe Logs&quot;按钮手动清除日志。</p></div><h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h2><p>安装完成后，你可以在 Cursor 中使用自然语言与 BrowserTools MCP 交互：</p><h3 id="调试相关" tabindex="-1">调试相关 <a class="header-anchor" href="#调试相关" aria-label="Permalink to &quot;调试相关&quot;">​</a></h3><ul><li>&quot;这个功能不工作...进入调试模式！&quot;</li><li>&quot;检查控制台和网络日志，看看哪里出错了？&quot;</li><li>&quot;UI 看起来不太对，能截个图吗？&quot;</li></ul><h3 id="编辑和优化" tabindex="-1">编辑和优化 <a class="header-anchor" href="#编辑和优化" aria-label="Permalink to &quot;编辑和优化&quot;">​</a></h3><ul><li>&quot;你能编辑当前选中的元素来实现 x、y 和 z 吗？&quot;</li><li>&quot;我需要改进 SEO 和性能...进入审计模式&quot;</li></ul><h3 id="检查和监控" tabindex="-1">检查和监控 <a class="header-anchor" href="#检查和监控" aria-label="Permalink to &quot;检查和监控&quot;">​</a></h3><ul><li>&quot;查看网络请求，看看 API 调用是否正常&quot;</li><li>&quot;运行性能审计，找出页面加载缓慢的原因&quot;</li></ul><h2 id="可用的-mcp-工具" tabindex="-1">可用的 MCP 工具 <a class="header-anchor" href="#可用的-mcp-工具" aria-label="Permalink to &quot;可用的 MCP 工具&quot;">​</a></h2><p>BrowserTools MCP 提供了以下工具，你可以通过 AI 助手调用：</p><ul><li><code>takeScreenshot</code>：截取当前浏览器标签页的截图</li><li><code>getConsoleLogs</code>：获取浏览器控制台日志</li><li><code>getConsoleErrors</code>：获取浏览器控制台错误</li><li><code>getNetworkLogs</code>：获取所有网络日志</li><li><code>getNetworkErrors</code>：获取网络错误日志</li><li><code>getSelectedElement</code>：获取当前选中的 DOM 元素</li><li><code>runAccessibilityAudit</code>：运行可访问性审计</li><li><code>runPerformanceAudit</code>：运行性能审计</li><li><code>runSEOAudit</code>：运行 SEO 审计</li><li><code>runBestPracticesAudit</code>：运行最佳实践审计</li><li><code>runNextJSAudit</code>：运行 NextJS 专用审计</li><li><code>runDebuggerMode</code>：进入调试模式</li><li><code>runAuditMode</code>：进入审计模式</li><li><code>wipeLogs</code>：清除所有浏览器日志</li></ul><h2 id="故障排除" tabindex="-1">故障排除 <a class="header-anchor" href="#故障排除" aria-label="Permalink to &quot;故障排除&quot;">​</a></h2><h3 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h3><h4 id="_1-截图工具失败" tabindex="-1">1. 截图工具失败 <a class="header-anchor" href="#_1-截图工具失败" aria-label="Permalink to &quot;1. 截图工具失败&quot;">​</a></h4><p>确保使用明确的版本号：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @agentdeskai/browser-tools-mcp@1.2.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_2-找不到截图" tabindex="-1">2. 找不到截图 <a class="header-anchor" href="#_2-找不到截图" aria-label="Permalink to &quot;2. 找不到截图&quot;">​</a></h4><p>截图默认保存在下载文件夹的 <code>/mcp-screenshots</code> 目录中。你也可以在 BrowserToolsMCP 开发工具面板中设置自定义路径。</p><h4 id="_3-看不到任何日志" tabindex="-1">3. 看不到任何日志 <a class="header-anchor" href="#_3-看不到任何日志" aria-label="Permalink to &quot;3. 看不到任何日志&quot;">​</a></h4><p>确保在要捕获日志的浏览器标签页中打开 Chrome 开发工具控制台。</p><h4 id="_4-日志过多" tabindex="-1">4. 日志过多 <a class="header-anchor" href="#_4-日志过多" aria-label="Permalink to &quot;4. 日志过多&quot;">​</a></h4><p>关闭其他打开 Chrome 开发工具的标签页，BrowserToolsMCP 会捕获多个标签页的日志。</p><h4 id="_5-日志不断消失" tabindex="-1">5. 日志不断消失 <a class="header-anchor" href="#_5-日志不断消失" aria-label="Permalink to &quot;5. 日志不断消失&quot;">​</a></h4><p>每次刷新页面或重启运行 browser-tool-mcp 服务器的 Node 进程时，日志都会被清除。</p><h3 id="调试-mcp-连接" tabindex="-1">调试 MCP 连接 <a class="header-anchor" href="#调试-mcp-连接" aria-label="Permalink to &quot;调试 MCP 连接&quot;">​</a></h3><p>如果遇到连接问题，可以运行以下命令监控 Cursor MCP 日志：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -F</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Library/Application</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Support/Cursor/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">**</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MCP.log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="测试计划" tabindex="-1">测试计划 <a class="header-anchor" href="#测试计划" aria-label="Permalink to &quot;测试计划&quot;">​</a></h2><p>为了充分验证 BrowserTools MCP 的功能，计划进行以下测试：</p><h3 id="基础功能测试" tabindex="-1">基础功能测试 <a class="header-anchor" href="#基础功能测试" aria-label="Permalink to &quot;基础功能测试&quot;">​</a></h3><ul><li>[ ] 截图功能测试</li><li>[ ] 控制台日志获取测试</li><li>[ ] 网络请求监控测试</li><li>[ ] DOM 元素选择测试</li></ul><h3 id="审计功能测试" tabindex="-1">审计功能测试 <a class="header-anchor" href="#审计功能测试" aria-label="Permalink to &quot;审计功能测试&quot;">​</a></h3><ul><li>[ ] SEO 审计功能测试</li><li>[ ] 性能审计功能测试</li><li>[ ] 可访问性审计测试</li><li>[ ] NextJS 专用审计测试</li></ul><h3 id="智能模式测试" tabindex="-1">智能模式测试 <a class="header-anchor" href="#智能模式测试" aria-label="Permalink to &quot;智能模式测试&quot;">​</a></h3><ul><li>[ ] 调试模式综合测试</li><li>[ ] 审计模式综合测试</li></ul><h3 id="集成测试" tabindex="-1">集成测试 <a class="header-anchor" href="#集成测试" aria-label="Permalink to &quot;集成测试&quot;">​</a></h3><ul><li>[ ] 与 Cursor 的集成稳定性测试</li><li>[ ] 多标签页环境下的功能测试</li><li>[ ] 长时间运行稳定性测试</li></ul><h2 id="结语" tabindex="-1">结语 <a class="header-anchor" href="#结语" aria-label="Permalink to &quot;结语&quot;">​</a></h2><p>BrowserTools MCP 是一个革新性的工具，它极大地简化了 Web 开发中的调试和优化工作流程。通过将浏览器功能直接集成到 AI 代码编辑器中，开发者可以更高效地识别和解决问题。</p><p>后续我将对该工具的各项功能进行详细测试，并记录实际使用体验和最佳实践。</p><hr><p><strong>参考资料：</strong></p><ul><li><a href="https://browsertools.agentdesk.ai/installation" target="_blank" rel="noreferrer">BrowserTools MCP 官方文档</a></li><li><a href="https://github.com/AgentDeskAI/browser-tools-mcp" target="_blank" rel="noreferrer">GitHub 仓库</a></li></ul>`,78)]))}const k=a(o,[["render",r]]);export{c as __pageData,k as default};
