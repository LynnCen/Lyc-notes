import{_ as i,c as s,o as l,a8 as e}from"./chunks/framework.BlF7juqX.js";const c=JSON.parse('{"title":"Figma Dev Mode MCP 使用指南","description":"","frontmatter":{},"headers":[],"relativePath":"AI/mcp/figma.md","filePath":"AI/mcp/figma.md","lastUpdated":1749741973000}'),n={name:"AI/mcp/figma.md"};function t(r,a,o,p,h,d){return l(),s("div",null,a[0]||(a[0]=[e(`<h1 id="figma-dev-mode-mcp-使用指南" tabindex="-1">Figma Dev Mode MCP 使用指南 <a class="header-anchor" href="#figma-dev-mode-mcp-使用指南" aria-label="Permalink to &quot;Figma Dev Mode MCP 使用指南&quot;">​</a></h1><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>本文章介绍如何安装和使用 <a href="https://help.figma.com/hc/en-us/articles/32132100833559-Guide-to-the-Dev-Mode-MCP-Server" target="_blank" rel="noreferrer">Figma Dev Mode MCP Server</a>，这是一个革命性的工具，将 Figma 设计直接带入开发工作流程。</p></div><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>Figma Dev Mode MCP Server 是 Figma 推出的一个创新工具，它通过模型上下文协议（Model Context Protocol）将 Figma 设计文件直接集成到 AI 代码编辑器中。这个工具让 AI 智能体能够获取重要的设计信息和上下文，从而生成更准确、更符合设计意图的代码。</p><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>Figma Dev Mode MCP Server 目前处于公开测试阶段，某些功能和设置可能尚未完全可用。</p></div><h2 id="为什么需要-figma-mcp" tabindex="-1">为什么需要 Figma MCP？ <a class="header-anchor" href="#为什么需要-figma-mcp" aria-label="Permalink to &quot;为什么需要 Figma MCP？&quot;">​</a></h2><p>在传统的设计到代码工作流程中，开发者通常需要：</p><ul><li>手动查看设计稿并理解设计意图</li><li>猜测颜色值、间距和字体大小</li><li>重复创建已存在的组件</li><li>在设计和代码之间来回切换</li></ul><p>Figma MCP 解决了这些痛点，让 AI 能够：</p><ul><li>直接读取设计文件中的精确数值</li><li>理解设计系统和组件结构</li><li>生成与现有代码库一致的代码</li><li>保持设计和代码的同步</li></ul><h2 id="主要特性" tabindex="-1">主要特性 <a class="header-anchor" href="#主要特性" aria-label="Permalink to &quot;主要特性&quot;">​</a></h2><h3 id="🎨-从选中框架生成代码" tabindex="-1">🎨 从选中框架生成代码 <a class="header-anchor" href="#🎨-从选中框架生成代码" aria-label="Permalink to &quot;🎨 从选中框架生成代码&quot;">​</a></h3><ul><li><strong>智能代码生成</strong>：选择 Figma 中的任意框架，AI 可以将其转换为可用的代码</li><li><strong>适用场景</strong>：非常适合产品团队构建新流程或迭代应用功能</li><li><strong>支持多种框架</strong>：可以生成 React、Vue 等不同框架的代码</li></ul><h3 id="📐-提取设计上下文" tabindex="-1">📐 提取设计上下文 <a class="header-anchor" href="#📐-提取设计上下文" aria-label="Permalink to &quot;📐 提取设计上下文&quot;">​</a></h3><ul><li><strong>变量提取</strong>：直接将设计变量（颜色、字体、间距等）拉入 IDE</li><li><strong>组件信息</strong>：获取组件的详细结构和属性</li><li><strong>布局数据</strong>：提取布局信息，包括 Grid、Flexbox 等</li><li><strong>设计系统支持</strong>：特别适用于设计系统和基于组件的工作流程</li></ul><h3 id="🔗-code-connect-智能集成" tabindex="-1">🔗 Code Connect 智能集成 <a class="header-anchor" href="#🔗-code-connect-智能集成" aria-label="Permalink to &quot;🔗 Code Connect 智能集成&quot;">​</a></h3><ul><li><strong>组件复用</strong>：通过重用实际组件来提升输出质量</li><li><strong>代码一致性</strong>：确保生成的代码与现有代码库保持一致</li><li><strong>映射关系</strong>：建立设计组件与代码组件的映射关系</li></ul><h3 id="📝-丰富的设计信息" tabindex="-1">📝 丰富的设计信息 <a class="header-anchor" href="#📝-丰富的设计信息" aria-label="Permalink to &quot;📝 丰富的设计信息&quot;">​</a></h3><ul><li><strong>文本内容</strong>：提取设计中的实际文本内容</li><li><strong>图层名称</strong>：利用有意义的图层命名来理解设计意图</li><li><strong>注释信息</strong>：读取设计中的注释和说明</li><li><strong>占位符内容</strong>：即使是占位符内容也能为 AI 提供有价值的上下文</li></ul><h2 id="系统要求" tabindex="-1">系统要求 <a class="header-anchor" href="#系统要求" aria-label="Permalink to &quot;系统要求&quot;">​</a></h2><h3 id="必需条件" tabindex="-1">必需条件 <a class="header-anchor" href="#必需条件" aria-label="Permalink to &quot;必需条件&quot;">​</a></h3><ul><li><strong>Figma 桌面应用</strong>：必须使用 Figma 桌面版（不支持网页版）</li><li><strong>订阅计划</strong>：需要 Professional、Organization 或 Enterprise 计划的 Dev 或 Full 席位</li><li><strong>支持的编辑器</strong>：VS Code、Cursor、Windsurf、Claude Code 等支持 MCP 的编辑器</li></ul><h3 id="推荐配置" tabindex="-1">推荐配置 <a class="header-anchor" href="#推荐配置" aria-label="Permalink to &quot;推荐配置&quot;">​</a></h3><ul><li><strong>最新版本</strong>：确保 Figma 桌面应用更新到最新版本</li><li><strong>稳定网络</strong>：良好的网络连接以确保 MCP 服务器稳定运行</li></ul><h2 id="安装指南" tabindex="-1">安装指南 <a class="header-anchor" href="#安装指南" aria-label="Permalink to &quot;安装指南&quot;">​</a></h2><h3 id="第一步-启用-figma-mcp-服务器" tabindex="-1">第一步：启用 Figma MCP 服务器 <a class="header-anchor" href="#第一步-启用-figma-mcp-服务器" aria-label="Permalink to &quot;第一步：启用 Figma MCP 服务器&quot;">​</a></h3><ol><li><p><strong>打开 Figma 桌面应用</strong></p><ul><li>确保已更新到最新版本</li><li>如果没有桌面应用，请先<a href="https://www.figma.com/downloads/" target="_blank" rel="noreferrer">下载安装</a></li></ul></li><li><p><strong>创建或打开设计文件</strong></p><ul><li>创建一个新的 Figma Design 文件</li><li>或打开现有的设计文件</li></ul></li><li><p><strong>启用 MCP 服务器</strong></p><ul><li>点击左上角的 Figma 菜单</li><li>在 <strong>Preferences（偏好设置）</strong> 下选择 <strong>Enable Dev Mode MCP Server</strong></li><li>看到屏幕底部的确认消息，表示服务器已启用并运行</li></ul></li><li><p><strong>记录服务器地址</strong></p><ul><li>服务器将在本地运行：<code>http://127.0.0.1:3845/sse</code></li><li>请记住这个地址，下一步配置时需要用到</li></ul></li></ol><h3 id="第二步-配置-mcp-客户端" tabindex="-1">第二步：配置 MCP 客户端 <a class="header-anchor" href="#第二步-配置-mcp-客户端" aria-label="Permalink to &quot;第二步：配置 MCP 客户端&quot;">​</a></h3><p>根据你使用的编辑器，选择相应的配置方法：</p><h4 id="vs-code-配置" tabindex="-1">VS Code 配置 <a class="header-anchor" href="#vs-code-配置" aria-label="Permalink to &quot;VS Code 配置&quot;">​</a></h4><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>使用 VS Code 需要启用 GitHub Copilot</p></div><ol><li><p><strong>打开设置</strong></p><ul><li>使用快捷键 <code>⌘ ,</code>（Mac）或 <code>Ctrl ,</code>（Windows）</li><li>或通过菜单：<strong>Code → Settings → Settings</strong></li></ul></li><li><p><strong>搜索 MCP 设置</strong></p><ul><li>在搜索栏中输入 &quot;MCP&quot;</li><li>选择 <strong>Edit in settings.json</strong></li></ul></li><li><p><strong>添加配置</strong></p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;chat.mcp.discovery.enabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;mcp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;servers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;Figma Dev Mode MCP&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sse&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://127.0.0.1:3845/sse&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;chat.agent.enabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li><li><p><strong>验证连接</strong></p><ul><li>使用快捷键 <code>⌥⌘B</code>（Mac）打开聊天工具栏</li><li>切换到 <strong>Agent</strong> 模式</li><li>在选择工具菜单中查找 <code>MCP Server: Figma Dev Mode MCP</code> 部分</li><li>如果没有看到工具，请重启 Figma 桌面应用和 VS Code</li></ul></li></ol><h4 id="cursor-配置" tabindex="-1">Cursor 配置 <a class="header-anchor" href="#cursor-配置" aria-label="Permalink to &quot;Cursor 配置&quot;">​</a></h4><ol><li><p><strong>打开 Cursor 设置</strong></p><ul><li>菜单：<strong>Cursor → Settings → Cursor Settings</strong></li></ul></li><li><p><strong>添加 MCP 服务器</strong></p><ul><li>转到 <strong>MCP</strong> 标签页</li><li>点击 <strong>+ Add new global MCP server</strong></li></ul></li><li><p><strong>输入配置</strong></p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;mcpServers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;Figma&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://127.0.0.1:3845/sse&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li><p><strong>保存配置</strong></p><ul><li>保存设置并重启 Cursor</li></ul></li></ol><h4 id="windsurf-配置" tabindex="-1">Windsurf 配置 <a class="header-anchor" href="#windsurf-配置" aria-label="Permalink to &quot;Windsurf 配置&quot;">​</a></h4><ol><li><p><strong>打开设置</strong></p><ul><li>使用快捷键 <code>⌘ ,</code> 或菜单：<strong>Windsurf → Settings → Windsurf Settings</strong></li></ul></li><li><p><strong>安装插件</strong></p><ul><li>导航到 <strong>Cascade settings</strong></li><li>选择 <strong>Open plugin store</strong></li><li>搜索 <strong>Figma</strong> 并安装插件</li></ul></li><li><p><strong>验证安装</strong></p><ul><li>打开 <strong>Cascade</strong></li><li>应该能看到 Figma MCP 服务器和可用工具</li></ul></li></ol><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>在 Windsurf 中，需要将配置文件中的 <code>url</code> 属性改为 <code>serverUrl</code> 以避免错误。</p></div><h4 id="claude-code-配置" tabindex="-1">Claude Code 配置 <a class="header-anchor" href="#claude-code-配置" aria-label="Permalink to &quot;Claude Code 配置&quot;">​</a></h4><ol><li><p><strong>添加服务器</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">claude</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --transport</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sse</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> figma-dev-mode-mcp-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://127.0.0.1:3845/sse</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><strong>管理服务器</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 列出所有配置的服务器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">claude</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取特定服务器详情</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">claude</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> figma-dev-mode-mcp-server</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 移除服务器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">claude</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> figma-dev-mode-mcp-server</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ol><h3 id="第三步-验证连接" tabindex="-1">第三步：验证连接 <a class="header-anchor" href="#第三步-验证连接" aria-label="Permalink to &quot;第三步：验证连接&quot;">​</a></h3><ol><li><p><strong>刷新或启动服务器</strong></p><ul><li>重启你的代码编辑器</li><li>确保 Figma 桌面应用中的 MCP 服务器仍在运行</li></ul></li><li><p><strong>检查连接状态</strong></p><ul><li>应该看到成功连接的提示</li><li>可以看到可用的工具列表</li></ul></li><li><p><strong>故障排除</strong></p><ul><li>如果连接失败或看不到工具，请检查 Figma 桌面应用中的服务器是否处于活动状态</li><li>确保端口 3845 没有被其他应用占用</li></ul></li></ol><h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h2><p>Figma Dev Mode MCP Server 提供了两种主要的使用方式：</p><h3 id="基于选择的方式-推荐" tabindex="-1">基于选择的方式（推荐） <a class="header-anchor" href="#基于选择的方式-推荐" aria-label="Permalink to &quot;基于选择的方式（推荐）&quot;">​</a></h3><ol><li><p><strong>在 Figma 中选择设计元素</strong></p><ul><li>打开 Figma 桌面应用</li><li>选择你想要转换为代码的框架或图层</li></ul></li><li><p><strong>在编辑器中发起请求</strong></p><ul><li>在你的 AI 代码编辑器中输入提示</li><li>例如：&quot;请帮我实现当前选中的设计&quot;</li><li>或：&quot;将选中的组件转换为 React 代码&quot;</li></ul></li></ol><h3 id="基于链接的方式" tabindex="-1">基于链接的方式 <a class="header-anchor" href="#基于链接的方式" aria-label="Permalink to &quot;基于链接的方式&quot;">​</a></h3><ol><li><p><strong>复制 Figma 链接</strong></p><ul><li>在 Figma 中右键点击框架或图层</li><li>选择 &quot;Copy link&quot;</li></ul></li><li><p><strong>在编辑器中使用链接</strong></p><ul><li>将链接粘贴到 AI 编辑器中</li><li>例如：&quot;请帮我实现这个设计：[Figma链接]&quot;</li></ul></li></ol><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>AI 客户端无法直接导航到链接，但会提取其中的 node-id 来识别要处理的设计对象。</p></div><h2 id="实用示例" tabindex="-1">实用示例 <a class="header-anchor" href="#实用示例" aria-label="Permalink to &quot;实用示例&quot;">​</a></h2><h3 id="创建组件" tabindex="-1">创建组件 <a class="header-anchor" href="#创建组件" aria-label="Permalink to &quot;创建组件&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;请根据当前选中的 Figma 设计创建一个 React 组件，使用 Tailwind CSS 进行样式设置&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="提取设计变量" tabindex="-1">提取设计变量 <a class="header-anchor" href="#提取设计变量" aria-label="Permalink to &quot;提取设计变量&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;从当前选中的设计中提取所有颜色变量和字体样式，并生成对应的 CSS 变量&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="生成响应式布局" tabindex="-1">生成响应式布局 <a class="header-anchor" href="#生成响应式布局" aria-label="Permalink to &quot;生成响应式布局&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;将这个 Figma 框架转换为响应式的 HTML/CSS 布局，确保在移动端和桌面端都能正常显示&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="创建设计系统组件" tabindex="-1">创建设计系统组件 <a class="header-anchor" href="#创建设计系统组件" aria-label="Permalink to &quot;创建设计系统组件&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;基于选中的设计创建一个可复用的按钮组件，包含不同的变体（primary、secondary、disabled）&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="可用工具" tabindex="-1">可用工具 <a class="header-anchor" href="#可用工具" aria-label="Permalink to &quot;可用工具&quot;">​</a></h2><p>Figma Dev Mode MCP Server 提供了三个主要工具：</p><ol><li><strong>代码工具</strong>：获取设计的代码表示，支持多种框架</li><li><strong>图像工具</strong>：提取设计中的图像资源</li><li><strong>变量定义工具</strong>：获取设计变量的定义和值</li></ol><p>你可以在服务器设置中调整代码工具返回的响应类型，以便根据具体任务进行微调。</p><h2 id="最佳实践" tabindex="-1">最佳实践 <a class="header-anchor" href="#最佳实践" aria-label="Permalink to &quot;最佳实践&quot;">​</a></h2><h3 id="设计准备" tabindex="-1">设计准备 <a class="header-anchor" href="#设计准备" aria-label="Permalink to &quot;设计准备&quot;">​</a></h3><ul><li><strong>使用有意义的图层名称</strong>：清晰的命名有助于 AI 理解设计意图</li><li><strong>添加注释</strong>：在复杂的设计中添加注释说明</li><li><strong>使用设计系统</strong>：利用 Figma 的组件和变量系统</li><li><strong>保持设计文件整洁</strong>：删除不必要的图层和元素</li></ul><h3 id="代码生成" tabindex="-1">代码生成 <a class="header-anchor" href="#代码生成" aria-label="Permalink to &quot;代码生成&quot;">​</a></h3><ul><li><strong>明确指定框架</strong>：告诉 AI 你想要使用的技术栈</li><li><strong>提供上下文</strong>：说明组件的用途和预期行为</li><li><strong>迭代优化</strong>：根据生成的代码进行调整和优化</li></ul><h3 id="code-connect-集成" tabindex="-1">Code Connect 集成 <a class="header-anchor" href="#code-connect-集成" aria-label="Permalink to &quot;Code Connect 集成&quot;">​</a></h3><ul><li><strong>建立映射关系</strong>：将设计组件与代码组件建立清晰的映射</li><li><strong>保持同步</strong>：定期更新 Code Connect 配置</li><li><strong>文档化</strong>：为组件添加详细的文档说明</li></ul><h2 id="故障排除" tabindex="-1">故障排除 <a class="header-anchor" href="#故障排除" aria-label="Permalink to &quot;故障排除&quot;">​</a></h2><h3 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h3><h4 id="_1-无法连接到-mcp-服务器" tabindex="-1">1. 无法连接到 MCP 服务器 <a class="header-anchor" href="#_1-无法连接到-mcp-服务器" aria-label="Permalink to &quot;1. 无法连接到 MCP 服务器&quot;">​</a></h4><ul><li>确保 Figma 桌面应用已启用 MCP 服务器</li><li>检查端口 3845 是否被占用</li><li>重启 Figma 桌面应用和代码编辑器</li></ul><h4 id="_2-看不到可用工具" tabindex="-1">2. 看不到可用工具 <a class="header-anchor" href="#_2-看不到可用工具" aria-label="Permalink to &quot;2. 看不到可用工具&quot;">​</a></h4><ul><li>验证编辑器配置是否正确</li><li>确保使用的是支持 MCP 的编辑器版本</li><li>检查网络连接</li></ul><h4 id="_3-生成的代码质量不佳" tabindex="-1">3. 生成的代码质量不佳 <a class="header-anchor" href="#_3-生成的代码质量不佳" aria-label="Permalink to &quot;3. 生成的代码质量不佳&quot;">​</a></h4><ul><li>提供更详细的提示信息</li><li>确保设计文件结构清晰</li><li>使用 Code Connect 提供更多上下文</li></ul><h4 id="_4-vs-code-中无法使用" tabindex="-1">4. VS Code 中无法使用 <a class="header-anchor" href="#_4-vs-code-中无法使用" aria-label="Permalink to &quot;4. VS Code 中无法使用&quot;">​</a></h4><ul><li>确保已启用 GitHub Copilot</li><li>检查 MCP 配置是否正确</li><li>更新到最新版本的 VS Code</li></ul><h3 id="调试技巧" tabindex="-1">调试技巧 <a class="header-anchor" href="#调试技巧" aria-label="Permalink to &quot;调试技巧&quot;">​</a></h3><ol><li><p><strong>检查服务器状态</strong></p><ul><li>在 Figma 中查看 MCP 服务器是否正在运行</li><li>访问 <code>http://127.0.0.1:3845/sse</code> 检查连接</li></ul></li><li><p><strong>查看编辑器日志</strong></p><ul><li>检查编辑器的错误日志</li><li>查看 MCP 相关的错误信息</li></ul></li><li><p><strong>测试连接</strong></p><ul><li>使用简单的提示测试基本功能</li><li>逐步增加复杂度</li></ul></li></ol><h2 id="未来发展" tabindex="-1">未来发展 <a class="header-anchor" href="#未来发展" aria-label="Permalink to &quot;未来发展&quot;">​</a></h2><p>Figma 团队正在积极开发更多功能：</p><h3 id="即将推出的功能" tabindex="-1">即将推出的功能 <a class="header-anchor" href="#即将推出的功能" aria-label="Permalink to &quot;即将推出的功能&quot;">​</a></h3><ul><li><strong>远程服务器功能</strong>：无需桌面应用即可使用</li><li><strong>更深入的代码库集成</strong>：更好地与现有项目集成</li><li><strong>简化的 Code Connect 体验</strong>：更直观的设置过程</li><li><strong>注释支持</strong>：更好地处理设计注释</li><li><strong>Grid 支持</strong>：增强的布局功能支持</li></ul><h3 id="长期规划" tabindex="-1">长期规划 <a class="header-anchor" href="#长期规划" aria-label="Permalink to &quot;长期规划&quot;">​</a></h3><ul><li>支持更多设计工具</li><li>增强的 AI 理解能力</li><li>更多的代码框架支持</li><li>团队协作功能增强</li></ul><h2 id="反馈和支持" tabindex="-1">反馈和支持 <a class="header-anchor" href="#反馈和支持" aria-label="Permalink to &quot;反馈和支持&quot;">​</a></h2><p>Figma 团队非常重视用户反馈，你可以通过以下方式提供反馈：</p><ul><li><strong>官方反馈表单</strong>：<a href="https://www.figma.com/feedback" target="_blank" rel="noreferrer">提交反馈</a></li><li><strong>社区讨论</strong>：参与 Figma 社区讨论</li><li><strong>GitHub Issues</strong>：如果遇到技术问题，可以在相关仓库提交 issue</li></ul><h2 id="结语" tabindex="-1">结语 <a class="header-anchor" href="#结语" aria-label="Permalink to &quot;结语&quot;">​</a></h2><p>Figma Dev Mode MCP Server 代表了设计到代码工作流程的重大进步。通过将设计上下文直接带入开发环境，它不仅提高了开发效率，还确保了设计意图的准确传达。</p><p>虽然目前还处于测试阶段，但这个工具已经展现出巨大的潜力。随着功能的不断完善和扩展，我们可以期待一个更加无缝、高效的设计开发协作未来。</p><p>对于设计师和开发者来说，现在是开始探索和使用这个工具的最佳时机。通过早期采用和反馈，你不仅能够提升自己的工作效率，还能为工具的未来发展贡献力量。</p><hr><p><strong>参考资料：</strong></p><ul><li><a href="https://help.figma.com/hc/en-us/articles/32132100833559-Guide-to-the-Dev-Mode-MCP-Server" target="_blank" rel="noreferrer">Figma Dev Mode MCP Server 官方指南</a></li><li><a href="https://www.figma.com/blog/introducing-figmas-dev-mode-mcp-server/" target="_blank" rel="noreferrer">Figma 博客：介绍 Dev Mode MCP Server</a></li><li><a href="https://modelcontextprotocol.io/" target="_blank" rel="noreferrer">Model Context Protocol 官方文档</a></li><li><a href="https://www.figma.com/developers" target="_blank" rel="noreferrer">Figma 开发者文档</a></li></ul>`,96)]))}const g=i(n,[["render",t]]);export{c as __pageData,g as default};
