import{_ as s,c as a,o as l,a8 as n}from"./chunks/framework.B1-gFi6y.js";const c=JSON.parse('{"title":"现代前端基础架构详解","description":"","frontmatter":{},"headers":[],"relativePath":"architecture/modern-frontend-architecture.md","filePath":"architecture/modern-frontend-architecture.md","lastUpdated":1744008273000}'),e={name:"architecture/modern-frontend-architecture.md"};function t(r,i,p,h,o,u){return l(),a("div",null,i[0]||(i[0]=[n(`<h1 id="现代前端基础架构详解" tabindex="-1">现代前端基础架构详解 <a class="header-anchor" href="#现代前端基础架构详解" aria-label="Permalink to &quot;现代前端基础架构详解&quot;">​</a></h1><h2 id="一、工程化体系" tabindex="-1">一、工程化体系 <a class="header-anchor" href="#一、工程化体系" aria-label="Permalink to &quot;一、工程化体系&quot;">​</a></h2><h3 id="_1-cicd-自动化流程" tabindex="-1">1. CICD 自动化流程 <a class="header-anchor" href="#_1-cicd-自动化流程" aria-label="Permalink to &quot;1. CICD 自动化流程&quot;">​</a></h3><ul><li><p><strong>代码管理</strong></p><ul><li>GitLab/GitHub 代码托管</li><li>分支管理策略（Git Flow）</li><li>代码审查机制（Code Review）</li></ul></li><li><p><strong>持续集成 (CI)</strong></p><ul><li>自动化测试 <ul><li>单元测试 (Jest)</li><li>E2E测试 (Cypress/Playwright)</li><li>代码质量检测 (SonarQube)</li></ul></li><li>代码规范检查 <ul><li>ESLint</li><li>Prettier</li><li>StyleLint</li></ul></li></ul></li><li><p><strong>持续部署 (CD)</strong></p><ul><li>自动化构建</li><li>环境部署策略 <ul><li>开发环境</li><li>测试环境</li><li>预发环境</li><li>生产环境</li></ul></li><li>灰度发布</li><li>回滚机制</li></ul></li></ul><h3 id="_2-技术栈选型" tabindex="-1">2. 技术栈选型 <a class="header-anchor" href="#_2-技术栈选型" aria-label="Permalink to &quot;2. 技术栈选型&quot;">​</a></h3><h4 id="_2-1-基础框架" tabindex="-1">2.1 基础框架 <a class="header-anchor" href="#_2-1-基础框架" aria-label="Permalink to &quot;2.1 基础框架&quot;">​</a></h4><ul><li><p><strong>React 技术栈</strong></p><ul><li>Create React App (CRA)</li><li>Next.js（SSR场景）</li><li>Umi（企业级）</li></ul></li><li><p><strong>构建工具</strong></p><ul><li>Vite（开发体验好，构建快）</li><li>Webpack（生态完善，适合复杂项目）</li></ul></li><li><p><strong>包管理工具</strong></p><ul><li>pnpm（推荐，节省磁盘空间，安装速度快）</li><li>yarn</li><li>npm</li></ul></li></ul><h4 id="_2-2-工程化配置" tabindex="-1">2.2 工程化配置 <a class="header-anchor" href="#_2-2-工程化配置" aria-label="Permalink to &quot;2.2 工程化配置&quot;">​</a></h4><ul><li><p><strong>CSS 解决方案</strong></p><ul><li>Less/Sass 预处理器</li><li>CSS Modules</li><li>Tailwind CSS</li><li>UnoCSS</li></ul></li><li><p><strong>TypeScript 配置</strong></p><ul><li>tsconfig.json 规范</li><li>类型检查优化</li></ul></li></ul><h2 id="二、基础物料体系" tabindex="-1">二、基础物料体系 <a class="header-anchor" href="#二、基础物料体系" aria-label="Permalink to &quot;二、基础物料体系&quot;">​</a></h2><h3 id="_1-ui组件库" tabindex="-1">1. UI组件库 <a class="header-anchor" href="#_1-ui组件库" aria-label="Permalink to &quot;1. UI组件库&quot;">​</a></h3><ul><li><p><strong>基础组件库</strong></p><ul><li>Ant Design（企业级）</li><li>Element Plus（轻量级）</li></ul></li><li><p><strong>样式解决方案</strong></p><ul><li>classnames（类名管理）</li><li>styled-components（CSS-in-JS）</li><li>UnoCSS（原子化CSS）</li></ul></li></ul><h3 id="_2-工具库" tabindex="-1">2. 工具库 <a class="header-anchor" href="#_2-工具库" aria-label="Permalink to &quot;2. 工具库&quot;">​</a></h3><ul><li><p><strong>通用工具</strong></p><ul><li>Lodash（工具函数）</li><li>Dayjs（时间处理）</li><li>uuid（唯一标识）</li></ul></li><li><p><strong>React 相关</strong></p><ul><li>ahooks（React Hooks库）</li><li>React Query（数据请求）</li><li>Zustand（状态管理）</li></ul></li></ul><h3 id="_3-图标系统" tabindex="-1">3. 图标系统 <a class="header-anchor" href="#_3-图标系统" aria-label="Permalink to &quot;3. 图标系统&quot;">​</a></h3><ul><li><strong>iconfont 方案</strong><ul><li>在线图标库</li><li>本地部署</li><li>SVG Sprite</li></ul></li></ul><h3 id="_4-http-请求" tabindex="-1">4. HTTP 请求 <a class="header-anchor" href="#_4-http-请求" aria-label="Permalink to &quot;4. HTTP 请求&quot;">​</a></h3><ul><li><p><strong>请求库选择</strong></p><ul><li>Axios（REST API）</li><li>GraphQL Client（GraphQL）</li></ul></li><li><p><strong>请求封装</strong></p><ul><li>统一错误处理</li><li>请求/响应拦截</li><li>取消请求</li><li>重试机制</li></ul></li></ul><h3 id="_5-静态资源" tabindex="-1">5. 静态资源 <a class="header-anchor" href="#_5-静态资源" aria-label="Permalink to &quot;5. 静态资源&quot;">​</a></h3><ul><li><p><strong>CDN 方案</strong></p><ul><li>资源分发策略</li><li>缓存策略</li><li>防盗链设置</li></ul></li><li><p><strong>图片管理</strong></p><ul><li>图片压缩</li><li>响应式图片</li><li>懒加载</li></ul></li></ul><h2 id="三、规范体系" tabindex="-1">三、规范体系 <a class="header-anchor" href="#三、规范体系" aria-label="Permalink to &quot;三、规范体系&quot;">​</a></h2><h3 id="_1-编码规范" tabindex="-1">1. 编码规范 <a class="header-anchor" href="#_1-编码规范" aria-label="Permalink to &quot;1. 编码规范&quot;">​</a></h3><h4 id="代码风格" tabindex="-1">代码风格 <a class="header-anchor" href="#代码风格" aria-label="Permalink to &quot;代码风格&quot;">​</a></h4><ul><li><strong>JavaScript/TypeScript</strong><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;semi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;singleQuote&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;tabWidth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;printWidth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul><h4 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h4><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>src/</span></span>
<span class="line"><span>├── assets/ # 静态资源</span></span>
<span class="line"><span>├── components/ # 公共组件</span></span>
<span class="line"><span>├── hooks/ # 自定义hooks</span></span>
<span class="line"><span>├── layouts/ # 布局组件</span></span>
<span class="line"><span>├── pages/ # 页面组件</span></span>
<span class="line"><span>├── services/ # API服务</span></span>
<span class="line"><span>├── stores/ # 状态管理</span></span>
<span class="line"><span>├── styles/ # 全局样式</span></span>
<span class="line"><span>├── types/ # TS类型定义</span></span>
<span class="line"><span>└── utils/ # 工具函数</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_2-git-工作流规范" tabindex="-1">2. Git 工作流规范 <a class="header-anchor" href="#_2-git-工作流规范" aria-label="Permalink to &quot;2. Git 工作流规范&quot;">​</a></h3><h4 id="分支管理" tabindex="-1">分支管理 <a class="header-anchor" href="#分支管理" aria-label="Permalink to &quot;分支管理&quot;">​</a></h4><ul><li><p><strong>主要分支</strong></p><ul><li>master：主分支</li><li>develop：开发分支</li><li>release：发布分支</li></ul></li><li><p><strong>辅助分支</strong></p><ul><li>feature/*：功能分支</li><li>bugfix/*：问题修复</li><li>hotfix/*：紧急修复</li></ul></li></ul><h4 id="提交规范" tabindex="-1">提交规范 <a class="header-anchor" href="#提交规范" aria-label="Permalink to &quot;提交规范&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 提交格式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">subject</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># type类型</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">feat:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     新功能</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fix:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      修复</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docs:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     文档</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">style:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    格式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">refactor:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 重构</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     测试</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chore:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    构建</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_3-质量保障" tabindex="-1">3. 质量保障 <a class="header-anchor" href="#_3-质量保障" aria-label="Permalink to &quot;3. 质量保障&quot;">​</a></h3><ul><li><p><strong>代码审查</strong></p><ul><li>团队 Code Review</li><li>自动化检查工具</li></ul></li><li><p><strong>测试策略</strong></p><ul><li>单元测试覆盖率要求</li><li>E2E测试场景定义</li></ul></li><li><p><strong>性能监控</strong></p><ul><li>页面加载性能</li><li>运行时性能</li><li>错误监控</li></ul></li></ul><h2 id="四、最佳实践" tabindex="-1">四、最佳实践 <a class="header-anchor" href="#四、最佳实践" aria-label="Permalink to &quot;四、最佳实践&quot;">​</a></h2><ol><li><p><strong>技术选型原则</strong></p><ul><li>生态完整性</li><li>社区活跃度</li><li>团队熟悉度</li><li>维护成本</li></ul></li><li><p><strong>代码组织原则</strong></p><ul><li>高内聚低耦合</li><li>可测试性</li><li>可维护性</li><li>可扩展性</li></ul></li><li><p><strong>性能优化原则</strong></p><ul><li>按需加载</li><li>资源压缩</li><li>缓存策略</li><li>预加载/预渲染</li></ul></li></ol><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://github.com/topics/frontend-architecture" target="_blank" rel="noreferrer">前端工程化最佳实践</a></li><li><a href="https://reactjs.org/" target="_blank" rel="noreferrer">React 官方文档</a></li><li><a href="https://modern.js.org/" target="_blank" rel="noreferrer">现代前端工具链</a></li></ul>`,37)]))}const k=s(e,[["render",t]]);export{c as __pageData,k as default};
